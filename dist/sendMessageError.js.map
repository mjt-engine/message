{"version":3,"file":"sendMessageError.js","sourceRoot":"","sources":["../src/sendMessageError.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AACzC,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAY,OAAO,IAAI,WAAW,EAAE,MAAM,SAAS,CAAC;AAC3D,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAGhE,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAAC,OAAY,EAAE,EAAE,CAC/C,KAAK,EACH,KAAc,EAEd,UAKK,EAAE,EACP,EAAE;IACF,MAAM,WAAW,GAAG,MAAM,kBAAkB,CAAC;QAC3C,KAAK;QACL,KAAK,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;KACzB,CAAC,CAAC;IACH,MAAM,eAAe,GAAG,WAAW,CACjC,OAAO,CAAC,IAAI,IAAI,GAAG,EACnB,OAAO,CAAC,eAAe,IAAI,OAAO,CACnC,CAAC;IACF,IAAI,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;QAC/B,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;YAC3D,eAAe,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IACD,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE;QAC5C,OAAO,EAAE,eAAe;KACzB,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Bytes } from \"@mjt-engine/byte\";\nimport { isDefined } from \"@mjt-engine/object\";\nimport { type Msg, headers as natsHeaders } from \"nats.ws\";\nimport { errorToErrorDetail } from \"./error/errorToErrorDetail\";\n\n\nexport const sendMessageError = (message: Msg) =>\n  async (\n    error: unknown,\n\n    options: Partial<{\n      code: number;\n\n      codeDescription: string;\n      headers: Record<string, string>;\n    }> = {}\n  ) => {\n    const errorDetail = await errorToErrorDetail({\n      error,\n      extra: [message.subject],\n    });\n    const responseHeaders = natsHeaders(\n      options.code ?? 500,\n      options.codeDescription ?? \"Error\"\n    );\n    if (isDefined(options.headers)) {\n      for (const [key, value] of Object.entries(options.headers)) {\n        responseHeaders.set(key, value);\n      }\n    }\n    message.respond(Bytes.toMsgPack(errorDetail), {\n      headers: responseHeaders,\n    });\n  };\n"]}