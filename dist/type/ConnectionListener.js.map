{"version":3,"file":"ConnectionListener.js","sourceRoot":"","sources":["../../src/type/ConnectionListener.ts"],"names":[],"mappings":"","sourcesContent":["import type { ConnectionMap } from \"./ConnectionMap\";\n\n\nexport type ConnectionListener<\n  CM extends ConnectionMap,\n  S extends keyof CM,\n  E extends Record<string, string> = Record<string, string>\n> = (props: {\n  env: Readonly<Partial<E>>;\n  detail: CM[S][\"request\"];\n  headers?: CM[S][\"headers\"];\n  signal: AbortSignal;\n  send: (\n    response?: CM[S][\"response\"],\n    options?: Partial<{\n      code: number;\n      codeDescription: string;\n      headers: Record<string, string>;\n    }>\n  ) => void;\n  sendError: (\n    error: unknown,\n    options?: Partial<{\n      code: number;\n      codeDescription: string;\n      headers: Record<string, string>;\n    }>\n  ) => void;\n  unsubscribe: (maxMessages?: number) => void;\n}) => CM[S][\"response\"] |\n    Promise<CM[S][\"response\"] | void> |\n    void |\n    Promise<void>;\n"]}