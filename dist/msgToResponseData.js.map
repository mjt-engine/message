{"version":3,"file":"msgToResponseData.js","sourceRoot":"","sources":["../src/msgToResponseData.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAC;AAEzC,OAAO,EAAE,kBAAkB,EAAE,MAAM,4BAA4B,CAAC;AAGhE,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,EAChC,GAAG,EAAE,OAAO,EAAE,OAAO,GAKtB,EAAE,EAAE;IACH,MAAM,YAAY,GAAG,KAAK,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;IACrE,IAAI,GAAG,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,8BAA8B,OAAiB,EAAE,EAAE;YACjE,KAAK,EAAE,kBAAkB,CAAC;gBACxB,KAAK,EAAE,YAAY;gBACnB,KAAK,EAAE,CAAC,OAAO,CAAC;aACjB,CAAC;SACH,CAAC,CAAC;IACL,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { Bytes } from \"@mjt-engine/byte\";\nimport type { Msg } from \"nats.ws\";\nimport { errorToErrorDetail } from \"./error/errorToErrorDetail\";\n\n\nexport const msgToResponseData = ({\n  msg, subject, request,\n}: {\n  msg: Msg;\n  subject: unknown;\n  request: unknown;\n}) => {\n  const responseData = Bytes.msgPackToObject(new Uint8Array(msg.data));\n  if (msg.headers?.hasError) {\n    throw new Error(`Error response on subject: ${subject as string}`, {\n      cause: errorToErrorDetail({\n        error: responseData,\n        extra: [request],\n      }),\n    });\n  }\n};\n"]}